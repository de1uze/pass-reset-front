{"ast":null,"code":"var _jsxFileName = \"/Users/de1uze/Desktop/task/passreset-front/passwordresetflow-frontend/src/Signup/Signup.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport classes from \"./Signup.module.css\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport { useForm } from \"react-hook-form\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object().shape({\n  firstName: yup.string().required(\"First Name is required\"),\n  lastName: yup.string().required(\"Last Name is required\"),\n  email: yup.string().email().required(\"Email is required\"),\n  password: yup.string().min(8, \"Password must atleast be 8 Characters long!\"),\n  passwordConfirm: yup.string().oneOf([yup.ref(\"password\")], \"Passwords does not match\")\n});\n\nfunction Signup() {\n  _s();\n\n  var _errors$firstName, _errors$lastName, _errors$email, _errors$password, _errors$passwordConfi;\n\n  const history = useHistory();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n\n  const submitHandler = (data, event) => {\n    event.preventDefault();\n    const firstName = data.firstName;\n    const lastName = data.lastName;\n    const email = data.email;\n    const password = data.password;\n    const confirmPassword = data.confirmPassword;\n    fetch(\"https://loginresetflow-backend.herokuapp.com/api/v1/users/signup\", {\n      method: \"POST\",\n      headers: {\n        \"content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        firstName,\n        lastName,\n        email,\n        password,\n        confirmPassword\n      })\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      } else {\n        return res.json().then(data => {\n          const errorMessage = `${data.message}`;\n          throw new Error(errorMessage);\n        });\n      }\n    }).then(data => {\n      alert(data.status);\n    }).catch(err => {\n      alert(err.message);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.title,\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Signup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.form,\n      onSubmit: handleSubmit(submitHandler),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          label: \"First Name\",\n          variant: \"outlined\",\n          margin: \"normal\",\n          style: {\n            width: 300\n          },\n          type: \"text\",\n          name: \"firstName\",\n          ...register(\"firstName\", {\n            required: true\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: classes.error,\n          children: (_errors$firstName = errors.firstName) === null || _errors$firstName === void 0 ? void 0 : _errors$firstName.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          margin: \"normal\",\n          name: \"lastName\",\n          label: \"Last Name\",\n          variant: \"outlined\",\n          style: {\n            width: 300\n          },\n          type: \"text\",\n          ...register(\"lastName\", {\n            required: true\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: classes.error,\n          children: (_errors$lastName = errors.lastName) === null || _errors$lastName === void 0 ? void 0 : _errors$lastName.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          name: \"email\",\n          id: \"outlined-basic\",\n          margin: \"normal\",\n          label: \"Email\",\n          variant: \"outlined\",\n          style: {\n            width: 300\n          },\n          type: \"email\",\n          ...register(\"email\", {\n            required: true\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: classes.error,\n          children: [\" \", (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          label: \"Password\",\n          variant: \"outlined\",\n          margin: \"normal\",\n          style: {\n            width: 300\n          },\n          type: \"password\",\n          name: \"password\",\n          ...register(\"password\", {\n            required: true\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: classes.error,\n          children: [\" \", (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          name: \"confirmPassword\",\n          id: \"outlined-basic\",\n          label: \"Confirm Password\",\n          variant: \"outlined\",\n          margin: \"normal\",\n          style: {\n            width: 300\n          },\n          type: \"password\",\n          ...register(\"confirmPassword\", {\n            required: true\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: classes.error,\n          children: [\" \", (_errors$passwordConfi = errors.passwordConfirm) === null || _errors$passwordConfi === void 0 ? void 0 : _errors$passwordConfi.message]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.btn,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          type: \"submit\",\n          children: \"Signup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: classes.line\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.options,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: classes.optionsHeading,\n          children: \"Already have an Account?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: classes.optionsText,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: () => history.push(\"/login\"),\n            children: \"Click here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), \" to Login into your account\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Signup, \"a/9z9iWrfUt8+qP5Szrz+RPFhmw=\", false, function () {\n  return [useHistory, useForm];\n});\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["/Users/de1uze/Desktop/task/passreset-front/passwordresetflow-frontend/src/Signup/Signup.js"],"names":["React","classes","TextField","Button","useForm","yup","yupResolver","useHistory","schema","object","shape","firstName","string","required","lastName","email","password","min","passwordConfirm","oneOf","ref","Signup","history","register","handleSubmit","formState","errors","resolver","submitHandler","data","event","preventDefault","confirmPassword","fetch","method","headers","body","JSON","stringify","then","res","ok","json","errorMessage","message","Error","alert","status","catch","err","container","title","form","width","error","btn","line","options","optionsHeading","optionsText","push"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport classes from \"./Signup.module.css\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport { useForm } from \"react-hook-form\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { useHistory } from \"react-router-dom\";\n\nconst schema = yup.object().shape({\n  firstName: yup.string().required(\"First Name is required\"),\n  lastName: yup.string().required(\"Last Name is required\"),\n  email: yup.string().email().required(\"Email is required\"),\n  password: yup.string().min(8, \"Password must atleast be 8 Characters long!\"),\n  passwordConfirm: yup\n    .string()\n    .oneOf([yup.ref(\"password\")], \"Passwords does not match\"),\n});\n\nfunction Signup() {\n  const history = useHistory();\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({ resolver: yupResolver(schema) });\n\n  const submitHandler = (data, event) => {\n    event.preventDefault();\n    const firstName = data.firstName;\n    const lastName = data.lastName;\n    const email = data.email;\n    const password = data.password;\n    const confirmPassword = data.confirmPassword;\n\n    fetch(\"https://loginresetflow-backend.herokuapp.com/api/v1/users/signup\", {\n      method: \"POST\",\n      headers: {\n        \"content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        firstName,\n        lastName,\n        email,\n        password,\n        confirmPassword,\n      }),\n    })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        } else {\n          return res.json().then((data) => {\n            const errorMessage = `${data.message}`;\n            throw new Error(errorMessage);\n          });\n        }\n      })\n      .then((data) => {\n        alert(data.status);\n      })\n      .catch((err) => {\n        alert(err.message);\n      });\n  };\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.title}>\n        <h3>Signup</h3>\n      </div>\n      <form className={classes.form} onSubmit={handleSubmit(submitHandler)}>\n        <div>\n          <TextField\n            id=\"outlined-basic\"\n            label=\"First Name\"\n            variant=\"outlined\"\n            margin=\"normal\"\n            style={{ width: 300 }}\n            type=\"text\"\n            name=\"firstName\"\n            {...register(\"firstName\", {\n              required: true,\n            })}\n          />\n          <p className={classes.error}>{errors.firstName?.message}</p>\n        </div>\n        <div>\n          <TextField\n            id=\"outlined-basic\"\n            margin=\"normal\"\n            name=\"lastName\"\n            label=\"Last Name\"\n            variant=\"outlined\"\n            style={{ width: 300 }}\n            type=\"text\"\n            {...register(\"lastName\", {\n              required: true,\n            })}\n          />\n          <p className={classes.error}>{errors.lastName?.message}</p>\n        </div>\n        <div>\n          <TextField\n            name=\"email\"\n            id=\"outlined-basic\"\n            margin=\"normal\"\n            label=\"Email\"\n            variant=\"outlined\"\n            style={{ width: 300 }}\n            type=\"email\"\n            {...register(\"email\", {\n              required: true,\n            })}\n          />\n          <p className={classes.error}> {errors.email?.message}</p>\n        </div>\n        <div>\n          <TextField\n            id=\"outlined-basic\"\n            label=\"Password\"\n            variant=\"outlined\"\n            margin=\"normal\"\n            style={{ width: 300 }}\n            type=\"password\"\n            name=\"password\"\n            {...register(\"password\", {\n              required: true,\n            })}\n          />\n          <p className={classes.error}> {errors.password?.message}</p>\n        </div>\n        <div>\n          <TextField\n            name=\"confirmPassword\"\n            id=\"outlined-basic\"\n            label=\"Confirm Password\"\n            variant=\"outlined\"\n            margin=\"normal\"\n            style={{ width: 300 }}\n            type=\"password\"\n            {...register(\"confirmPassword\", {\n              required: true,\n            })}\n          />\n          <p className={classes.error}> {errors.passwordConfirm?.message}</p>\n        </div>\n        <div className={classes.btn}>\n          <Button variant=\"contained\" type=\"submit\">\n            Signup\n          </Button>\n        </div>\n        <hr className={classes.line} />\n        <div className={classes.options}>\n          <p className={classes.optionsHeading}>Already have an Account?</p>\n          <p className={classes.optionsText}>\n            <span onClick={() => history.push(\"/login\")}>Click here</span> to\n            Login into your account\n          </p>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Signup;\n"]},"metadata":{},"sourceType":"module"}