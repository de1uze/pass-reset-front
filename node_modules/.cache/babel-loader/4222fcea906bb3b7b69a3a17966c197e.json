{"ast":null,"code":"var _jsxFileName = \"/Users/de1uze/Desktop/task/passreset-front/passwordresetflow-frontend/src/Forgot Password/ForgotPassword.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport classes from \"./ForgotPassword.module.css\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { useForm } from \"react-hook-form\";\nimport * as yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Schema = yup.object().shape({\n  email: yup.string().email().required(\"Email is required\")\n});\n\nfunction ForgotPassword() {\n  _s();\n\n  var _errors$email;\n\n  const {\n    handleSubmit,\n    register,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(Schema)\n  });\n\n  const submitHandler = (data, event) => {\n    event.preventDefault();\n    const email = data.email;\n    fetch(\"https://loginresetflow-backend.herokuapp.com/api/v1/users/forgotPassword\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        email\n      }),\n      headers: {\n        \"content-Type\": \"application/json\"\n      }\n    }).then(response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        return response.json().then(data => {\n          const errorMessage = `${data.message}`;\n          throw new Error(errorMessage);\n        });\n      }\n    }).then(data => {\n      alert(data.status);\n    }).catch(err => alert(err.message));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.title,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Forgot Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes.subText,\n        children: [\"Forgot Password! \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 28\n        }, this), \" No worries we will send you password reset link to your email\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.form,\n      onSubmit: handleSubmit(submitHandler),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          margin: \"normal\",\n          label: \"Email\",\n          variant: \"outlined\",\n          style: {\n            width: 300\n          },\n          type: \"email\",\n          name: \"email\",\n          ...register(\"email\", {\n            required: true\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: classes.error,\n          children: (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.btn,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          type: \"submit\",\n          children: \"Send Reset Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ForgotPassword, \"APLE1gV/4Xh45wrW48lVbDw+gwQ=\", false, function () {\n  return [useForm];\n});\n\n_c = ForgotPassword;\nexport default ForgotPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"sources":["/Users/de1uze/Desktop/task/passreset-front/passwordresetflow-frontend/src/Forgot Password/ForgotPassword.js"],"names":["React","TextField","Button","classes","yupResolver","useForm","yup","Schema","object","shape","email","string","required","ForgotPassword","handleSubmit","register","formState","errors","resolver","submitHandler","data","event","preventDefault","fetch","method","body","JSON","stringify","headers","then","response","ok","json","errorMessage","message","Error","alert","status","catch","err","container","title","subText","form","width","error","btn"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport classes from \"./ForgotPassword.module.css\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { useForm } from \"react-hook-form\";\nimport * as yup from \"yup\";\n\nconst Schema = yup.object().shape({\n  email: yup.string().email().required(\"Email is required\"),\n});\n\nfunction ForgotPassword() {\n  const {\n    handleSubmit,\n    register,\n    formState: { errors },\n  } = useForm({ resolver: yupResolver(Schema) });\n\n  const submitHandler = (data, event) => {\n    event.preventDefault();\n\n    const email = data.email;\n\n    fetch(\n      \"https://loginresetflow-backend.herokuapp.com/api/v1/users/forgotPassword\",\n      {\n        method: \"POST\",\n        body: JSON.stringify({ email }),\n        headers: {\n          \"content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          return response.json().then((data) => {\n            const errorMessage = `${data.message}`;\n            throw new Error(errorMessage);\n          });\n        }\n      })\n      .then((data) => {\n        alert(data.status);\n      })\n      .catch((err) => alert(err.message));\n  };\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.title}>\n        <h3>Forgot Password</h3>\n        <p className={classes.subText}>\n          Forgot Password! <br /> No worries we will send you password reset\n          link to your email\n        </p>\n      </div>\n      <form className={classes.form} onSubmit={handleSubmit(submitHandler)}>\n        <div>\n          <TextField\n            id=\"outlined-basic\"\n            margin=\"normal\"\n            label=\"Email\"\n            variant=\"outlined\"\n            style={{ width: 300 }}\n            type=\"email\"\n            name=\"email\"\n            {...register(\"email\", { required: true })}\n          />\n          <p className={classes.error}>{errors.email?.message}</p>\n        </div>\n        <div className={classes.btn}>\n          <Button variant=\"contained\" type=\"submit\">\n            Send Reset Email\n          </Button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default ForgotPassword;\n"]},"metadata":{},"sourceType":"module"}