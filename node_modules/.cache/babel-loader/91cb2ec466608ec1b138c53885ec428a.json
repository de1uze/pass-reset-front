{"ast":null,"code":"var _jsxFileName = \"/Users/de1uze/Desktop/task/passreset-front/passwordresetflow-frontend/src/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport classes from \"./Login.module.css\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object().shape({\n  email: yup.string().email().required(\"Email is required\"),\n  password: yup.string().min(8, \"Password must be atleast 8 Characters long!\")\n});\n\nfunction Login() {\n  _s();\n\n  var _errors$email, _errors$password;\n\n  const {\n    handleSubmit,\n    register,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n  const history = useHistory();\n\n  const submitHandler = (data, event) => {\n    event.preventDefault();\n    const email = data.email;\n    const password = data.password;\n    fetch(\"https://loginresetflow-backend.herokuapp.com/api/v1/users/login\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        email,\n        password\n      }),\n      headers: {\n        \"content-Type\": \"application/json\"\n      }\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      } else {\n        return res.json().then(data => {\n          let errorMessage = `${data.message}`;\n          throw new Error(errorMessage);\n        });\n      }\n    }).then(data => {\n      alert(data.status);\n      history.replace(\"/welcome\");\n    }).catch(err => {\n      alert(err.message);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.title,\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.form,\n      onSubmit: handleSubmit(submitHandler),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          margin: \"normal\",\n          label: \"Email\",\n          variant: \"outlined\",\n          type: \"email\",\n          name: \"email\",\n          style: {\n            width: 300\n          },\n          ...register(\"email\", {\n            required: true\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: classes.error,\n          children: (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          label: \"Password\",\n          name: \"password\",\n          variant: \"outlined\",\n          margin: \"normal\",\n          style: {\n            width: 300\n          },\n          type: \"password\",\n          ...register(\"password\", {\n            required: true\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: classes.error,\n          children: (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.btn,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: classes.line\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.options,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: classes.optionsHeading,\n          children: \"Forgot Password?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: classes.optionsText,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: () => history.replace(\"/forgotPassword\"),\n            children: \"Click here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), \" \", \"to reset your password\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"RHxbUu601dzJbaFidyxWgNxYbsc=\", false, function () {\n  return [useForm, useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/de1uze/Desktop/task/passreset-front/passwordresetflow-frontend/src/Login/Login.js"],"names":["React","useHistory","TextField","Button","classes","useForm","yupResolver","yup","schema","object","shape","email","string","required","password","min","Login","handleSubmit","register","formState","errors","resolver","history","submitHandler","data","event","preventDefault","fetch","method","body","JSON","stringify","headers","then","res","ok","json","errorMessage","message","Error","alert","status","replace","catch","err","container","title","form","width","error","btn","line","options","optionsHeading","optionsText"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport classes from \"./Login.module.css\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\n\nconst schema = yup.object().shape({\n  email: yup.string().email().required(\"Email is required\"),\n  password: yup.string().min(8, \"Password must be atleast 8 Characters long!\"),\n});\n\nfunction Login() {\n  const {\n    handleSubmit,\n    register,\n    formState: { errors },\n  } = useForm({ resolver: yupResolver(schema) });\n\n  const history = useHistory();\n\n  const submitHandler = (data, event) => {\n    event.preventDefault();\n\n    const email = data.email;\n    const password = data.password;\n\n    fetch(\"https://loginresetflow-backend.herokuapp.com/api/v1/users/login\", {\n      method: \"POST\",\n      body: JSON.stringify({ email, password }),\n      headers: {\n        \"content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        } else {\n          return res.json().then((data) => {\n            let errorMessage = `${data.message}`;\n            throw new Error(errorMessage);\n          });\n        }\n      })\n      .then((data) => {\n        alert(data.status);\n        history.replace(\"/welcome\");\n      })\n      .catch((err) => {\n        alert(err.message);\n      });\n  };\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.title}>\n        <h3>Login</h3>\n      </div>\n      <form className={classes.form} onSubmit={handleSubmit(submitHandler)}>\n        <div>\n          <TextField\n            id=\"outlined-basic\"\n            margin=\"normal\"\n            label=\"Email\"\n            variant=\"outlined\"\n            type=\"email\"\n            name=\"email\"\n            style={{ width: 300 }}\n            {...register(\"email\", { required: true })}\n          />\n          <p className={classes.error}>{errors.email?.message}</p>\n        </div>\n        <div>\n          <TextField\n            id=\"outlined-basic\"\n            label=\"Password\"\n            name=\"password\"\n            variant=\"outlined\"\n            margin=\"normal\"\n            style={{ width: 300 }}\n            type=\"password\"\n            {...register(\"password\", { required: true })}\n          />\n          <p className={classes.error}>{errors.password?.message}</p>\n        </div>\n        <div className={classes.btn}>\n          <Button variant=\"contained\" type=\"submit\">\n            Login\n          </Button>\n        </div>\n        <hr className={classes.line} />\n        <div className={classes.options}>\n          <p className={classes.optionsHeading}>Forgot Password?</p>\n          <p className={classes.optionsText}>\n            <span onClick={() => history.replace(\"/forgotPassword\")}>\n              Click here\n            </span>{\" \"}\n            to reset your password\n          </p>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}